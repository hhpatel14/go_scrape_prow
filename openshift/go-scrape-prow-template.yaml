## This template has:
## Namespace go-scrape-prow,
## influx --> Deployment, service, and persistentvolumeClaim 
## telegraf --> Deployment, Configmap, and persistentVolumeClaim
## grafana --> Deployment, Configmap, Service, PersistentVolumeClaim, and Route 
apiVersion: v1
kind: List
items:
  - kind: Namespace
    apiVersion: v1
    metadata:
      name: go-scrape-prow
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: influxdb
      name: influxdb
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: influxdb
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.service: influxdb
            app: prow
        spec:
          containers:
            - env:
                - name: INFLUXDB_DATA_INDEX_VERSION
                  value: tsi1
              image: influxdb:1.7.1
              name: influxdb
              ports:
                - name: port1 
                  containerPort: 8083
                - name: port2
                  containerPort: 8086
                - name: port3
                  containerPort: 8090
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/influxdb
                  name: influxdb-volume
          restartPolicy: Always
          volumes:
            - name: influxdb-volume
              persistentVolumeClaim:
                claimName: influxdb-volume
    status: {}
  - kind: Service
    apiVersion: v1
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: influxdb
      name: influxdb
    spec:
      ports:
        - name: port1
          port: 8083
          targetPort: port1
        - name: port2
          port: 8086
          targetPort: port2
        - name: port3
          port: 8090
          targetPort: port3
      selector:
        io.kompose.service: influxdb
        app: prow
    status:
      loadBalancer: {}
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: influxdb-volume
      name: influxdb-volume
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: telegraf
      name: telegraf
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: telegraf
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.service: telegraf
            app: telegraf
        spec:
          containers:
            - env:
                - name: DATABASE
                  valueFrom:
                    configMapKeyRef:
                      key: DATABASE
                      name: telegraf-env
                - name: HOST_NAME
                  valueFrom:
                    configMapKeyRef:
                      key: HOST_NAME
                      name: telegraf-env
                - name: INFLUXDB_HOST
                  valueFrom:
                    configMapKeyRef:
                      key: INFLUXDB_HOST
                      name: telegraf-env
                - name: INFLUXDB_PORT
                  valueFrom:
                    configMapKeyRef:
                      key: INFLUXDB_PORT
                      name: telegraf-env
              image: image-registry.openshift-image-registry.svc:5000/go-scrape-prow/telegraf@sha256:22f7ced54e2761770d910f6877ab7df5829d86612c5f7af91127d9a6da7ca406
              name: telegraf
              resources: {}
              volumeMounts:
                - mountPath: /tmp/telegraf
                  name: telegraf-volume
          hostname: telegraf
          restartPolicy: Always
          volumes:
            - name: telegraf-volume
              persistentVolumeClaim:
                claimName: telegraf-volume
    status: {}
  - kind: ConfigMap
    data:
      DATABASE: telegraf
      HOST_NAME: telegraf
      INFLUXDB_HOST: influxdb
      INFLUXDB_PORT: "8086"
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: telegraf-telegraf-env
      name: telegraf-env
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: telegraf-volume
      name: telegraf-volume
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: grafana
        app: grafana
      name: grafana
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: grafana
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.service: grafana
            app : grafana
        spec:
          containers:
            - env:
                - name: GF_AUTH_ANONYMOUS_ENABLED
                  valueFrom:
                    configMapKeyRef:
                      key: GF_AUTH_ANONYMOUS_ENABLED
                      name: grafana-env
                - name: GF_INSTALL_PLUGINS
                  valueFrom:
                    configMapKeyRef:
                      key: GF_INSTALL_PLUGINS
                      name: grafana-env
                - name: GF_SMTP_ENABLED
                  value: "false"
                - name: GF_USERS_ALLOW_ORG_CREATE
                  valueFrom:
                    configMapKeyRef:
                      key: GF_USERS_ALLOW_ORG_CREATE
                      name: grafana-env
                - name: GF_USERS_ALLOW_SIGN_UP
                  valueFrom:
                    configMapKeyRef:
                      key: GF_USERS_ALLOW_SIGN_UP
                      name: grafana-env
              image: grafana/grafana:8.4.6
              name: grafana
              securityContext:
                privileged : true
              ports:
                - name: front 
                  containerPort: 3000
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/grafana
                  name: grafana-volume
            - env:
                - name: GF_SECURITY_ADMIN_PASSWORD
                  value: admin
              image: image-registry.openshift-image-registry.svc:5000/go-scrape-prow/grafana-sidecar:latest
              name: grafana-sidecar
              securityContext:
                privileged: true
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/grafana
                  name: grafana-volume
          restartPolicy: Always
          volumes:
            - name: grafana-volume
              persistentVolumeClaim:
                claimName: grafana-volume
    status: {}
  - kind: ConfigMap
    apiVersion: v1
    data:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_INSTALL_PLUGINS: grafana-piechart-panel,grafana-clock-panel,grafana-googlesheets-datasource,snuids-trafficlights-panel
      GF_USERS_ALLOW_ORG_CREATE: "false"
      GF_USERS_ALLOW_SIGN_UP: "false"
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: grafana-grafana-env
      name: grafana-env
  - kind: Service
    apiVersion: v1
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: grafana
      name: grafana
    spec:
      ports:
        - name: front
          port: 3000
          targetPort: front
      selector:
        io.kompose.service: grafana
        app: grafana
    status:
      loadBalancer: {}
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: grafana-volume
      name: grafana-volume
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
    status: {}
  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: grafana
      namespace: go-scrape-prow
    spec:
      path: /
      to:
        kind: Service
        name: grafana
      port:
        targetPort: front
